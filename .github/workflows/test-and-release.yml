name: test-and-release

on:
  push:
    branches: [ main ]
    tags:     [ 'v*' ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  BUNDLER_VER: 2.3.22
# Forcing bundler version to ensure that it is consistent everywhere and
# does not cause bundler gem reinstalls
# bundler/rubygems 2.3.22 is a minimal requirement to support gnu/musl differentiation
# https://github.com/rubygems/rubygems/pull/4488

jobs:
  test-many:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        ruby-version: [ '2.7', '3.0', '3.1' ]

    steps:
    - uses: actions/checkout@v3

    - uses: ruby/setup-ruby@master
      with:
        bundler-cache: true
        bundler: ${{ env.BUNDLER_VER }}
        ruby-version: ${{ matrix.ruby-version }}

# https://github.com/microsoft/vcpkg/issues/15931
# no good solution :(
    - name: Workaround for vcpkg
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install gperf

    - run: bundle exec rake

  test-alpine:
    name: Test on alpine-latest
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    env:
      VCPKG_FORCE_SYSTEM_BINARIES: 1
       CMAKE_MAKE_PROGRAM: ninja
    steps:
    - name: Install packages
      run: |
        apk --no-cache --upgrade add build-base cmake git tar bash ruby-dev  \
          gperf flex bison gettext-dev python3 ninja make zip unzip curl pkgconfig

    - run: git config --global --add safe.directory $(pwd)
    - uses: actions/checkout@v3

    - run: gem install bundler:${{ env.BUNDLER_VER }} --no-document
    - run: bundle install

    - run: bundle exec rake spec

  package-many-native:
    name: build ${{ matrix.os }}, ${{ matrix.ruby-version }}, ${{ matrix.platform }}
    needs: test-many
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            platform: any
            ruby-version: '2.7'
          - os: ubuntu-18.04
            platform: x86_64-linux
            ruby-version: '2.7'
          - os: windows-latest
            platform: x64-mingw32
            ruby-version: '2.7'
          - os: windows-latest
            platform: x64-mingw-ucrt
            ruby-version: '3.1'
          - os: macos-latest
            platform: x86_64-darwin
            ruby-version: '2.7'
    steps:
    - uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@master
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler: ${{ env.BUNDLER_VER }}
        bundler-cache: true

    - name: Workaround for vcpkg
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install gperf

    - run: bundle exec rake gem:native:${{ matrix.platform }}

    - uses: actions/upload-artifact@v3
      with:
        name: pkg
        path: pkg/*.gem

  package-many-cross:
    name: build ${{ matrix.os }}, ${{ matrix.ruby-version }}, ${{ matrix.platform }}
    needs: test-many
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: aarch64-linux
            ruby-version: '2.7'
          - os: macos-latest
            platform: arm64-darwin
            ruby-version: '2.7'
    steps:
    - uses: actions/checkout@v3

    - name: Install Ubuntu packages
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu gperf

    - name: Install Ruby
      uses: ruby/setup-ruby@master
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler: ${{ env.BUNDLER_VER }}
        bundler-cache: true

    - name: Build native extension
      run: bundle exec rake gem:native:${{ matrix.platform }}

    - uses: actions/upload-artifact@v3
      with:
        name: pkg
        path: pkg/*.gem

  test-binary-many:
    needs: [ package-many-native, package-many-cross ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        ruby-version: [ '2.7', '3.0', '3.1' ]

    steps:
    - uses: actions/checkout@v3

    - uses: ruby/setup-ruby@master
      with:
        ruby-version: ${{ matrix.ruby-version }}

    - uses: actions/download-artifact@v3
      with:
        name: pkg
        path: pkg

    - name: Install binary gem
      run: gem install -b pkg/emf2svg-$(ruby -I lib -r emf2svg/version -e "puts Emf2svg::VERSION")-$(ruby -e "puts RUBY_PLATFORM.sub(/darwin\d{2}$/, 'darwin')").gem
# MacOS with have something like arm64-darwin19, others just aarch64-linux
    - name: Test conversion
      run: |
        ruby -remf2svg -e "puts File.write('output.svg', Emf2svg.from_file('spec/examples/image1.emf'), mode: 'wb')"

  test-ruby-many:
    needs: [ package-many-native, package-many-cross ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        ruby-version: [ '2.7', '3.0', '3.1' ]

    steps:
    - uses: actions/checkout@v3

    - uses: ruby/setup-ruby@master
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler: ${{ env.BUNDLER_VER }}

    - uses: actions/download-artifact@v3
      with:
        name: pkg
        path: pkg

    - name: Workaround for vcpkg
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install gperf

    - name: Install native gem
      run: gem install -b pkg/emf2svg-$(ruby -I lib -r emf2svg/version -e "puts Emf2svg::VERSION").gem

    - name: Test conversion
      run: |
        ruby -remf2svg -e "puts File.write('output.svg', Emf2svg.from_file('spec/examples/image1.emf'), mode: 'wb')"

# ----- Release -----
  release:
    name: Release gem
    needs: [ test-binary-many, test-ruby-many, test-alpine ]
    runs-on: ubuntu-latest
#    if: contains(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: pkg
        path: pkg

    - name: Publish to rubygems.org
      env:
        RUBYGEMS_API_KEY: ${{secrets.METANORMA_CI_RUBYGEMS_API_KEY}}
      run: |
        mkdir -p ~/.gem
        touch ~/.gem/credentials
        cat > ~/.gem/credentials << EOF
        ---
        :rubygems_api_key: ${RUBYGEMS_API_KEY}
        EOF
        chmod 0600 ~/.gem/credentials
        gem signin
        mkdir tmp
        for gem in pkg/*.gem; do echo "Will do 'gem push -V $gem'"; done

#        for gem in pkg/*.gem; do gem push -V $gem; done
